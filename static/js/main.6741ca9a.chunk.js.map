{"version":3,"sources":["components/Header/Header.jsx","components/SearchBox/Search.jsx","components/NameCard/NameCard.jsx","components/Results/Results.jsx","components/App/App.jsx","reportWebVitals.js","index.js"],"names":["Header","headTitle","headerExpanded","className","src","alt","SearchBox","onInputChange","onChange","event","target","value","placeholder","NameCard","suggestedName","rel","href","ResultContainer","suggestedNameJsx","suggestedNames","map","name","require","App","state","headerText","handleInputChange","inputText","setState","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAyBeA,EArBA,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,eACzB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,wGACRD,UAAS,oCAEND,EACM,sBACA,yBAELG,IAAI,gBACT,oBAAIF,UAAS,mCAETD,EACM,qBACA,wBAJV,SAKSD,QCNNK,G,MAXG,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACjB,OACI,qBAAKJ,UAAU,mBAAf,SACI,uBACIK,SAAU,SAACC,GAAD,OAAWF,EAAcE,EAAMC,OAAOC,QAChDC,YAAY,gBACZT,UAAU,qBCYXU,G,YAfE,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,cACf,OACI,mBAAGJ,OAAO,SACVK,IAAI,aACJZ,UAAU,YAAYa,KAAI,UAPb,mEAOa,OAAoBF,GAF9C,SAGA,qBAAKX,UAAU,mBAAf,SACI,mBAAGA,UAAU,cAAb,SACKW,UCIFG,EAbS,SAAC,GAAsB,IACrCC,EADoC,EAApBC,eACkBC,KAAI,SAACN,GACzC,OAAO,cAAC,EAAD,CAAUA,cAAeA,OAIpC,OACI,qBAAKX,UAAU,oBAAf,SACKe,KCLPG,EAAOC,EAAQ,IAiCNC,E,4MA5BXC,MAAQ,CACJC,WAAY,UACZvB,gBAAiB,EACjBiB,eAAgB,I,EAGxBO,kBAAoB,SAACC,GAEjB,EAAKC,SAAS,CACV1B,gBAAiByB,EACjBR,eAAgBQ,EAAYN,EAAKM,GAAa,M,4CAKlD,WAEI,OACI,gCACI,cAAC,EAAD,CAAQzB,eAAgB2B,KAAKL,MAAMtB,eAAgBD,UAAW4B,KAAKL,MAAMC,aACzE,cAAC,EAAD,CAAWlB,cAAesB,KAAKH,oBAC/B,cAAC,EAAD,CAASP,eAAgBU,KAAKL,MAAML,wB,GAvBlCW,IAAMC,WCETC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6741ca9a.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\n\nconst Header = ({ headTitle, headerExpanded}) => {\n    return(\n        <div className=\"head-container\">\n            <img src=\"https://user-images.githubusercontent.com/26179770/106359099-693e3380-6336-11eb-8069-9e36f25de5ca.png\"\n             className={`head-image\n              ${\n                headerExpanded\n                    ? 'head-image-expanded'\n                    : 'head-image-contracted'\n                }`}\n                 alt=\"headerImage\"/>\n            <h1 className={`head-text\n              ${\n                headerExpanded\n                    ? 'head-text-expanded'\n                    : 'head-text-contracted'\n                }`}>{headTitle}</h1>\n        </div>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport './Search.css'\n\nconst SearchBox = ({ onInputChange }) => {\n    return (\n        <div className=\"search-container\">\n            <input \n                onChange={(event) => onInputChange(event.target.value)}\n                placeholder=\"Type Keyowrds\"\n                className=\"search-input\"/>\n        </div>\n    );\n};\n\nexport default SearchBox;","import React from 'react';\nimport './NameCard.css'\n\nconst nameCheapUrl = \"https://www.namecheap.com/domains/registration/results/?domain=\"\n\n\nconst NameCard = ({suggestedName}) =>  {\n    return(\n        <a target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"card-link\" href={`${nameCheapUrl}${suggestedName}`}>\n        <div className=\"result-name-card\">\n            <p className=\"result-name\">\n                {suggestedName}\n            </p>\n        </div>\n        </a>\n    )\n}\n\n\nexport default NameCard;","import React from 'react';\nimport './Results.css'\nimport NameCard from '../NameCard/NameCard'\n\nconst ResultContainer = ({suggestedNames}) => {\n    const suggestedNameJsx = suggestedNames.map((suggestedName) => {\n        return <NameCard suggestedName={suggestedName} />;\n    });\n\n\n    return (\n        <div className=\"results-container\">\n            {suggestedNameJsx}\n        </div>\n    )\n}\n\nexport default ResultContainer;","import React from 'react';\nimport './App.css';\nimport Header from './../Header/Header';\nimport SearchBox from '../SearchBox/Search';\nimport Results from '../Results/Results';\n\n\nconst name = require('@rstacruz/startup-name-generator');\n\n\nclass App extends React.Component {\n   \n    state = {\n        headerText: 'Name It',\n        headerExpanded : true,\n        suggestedNames: [],  \n}\n\nhandleInputChange = (inputText) => {\n  // console.log(inputText);\n    this.setState({ \n        headerExpanded: !inputText ? true : false,\n        suggestedNames: inputText ? name(inputText) : [],\n     });\n}\n   \n   \n    render () {\n        //console.log(name('new'))\n        return (\n            <div>\n                <Header headerExpanded={this.state.headerExpanded} headTitle={this.state.headerText}/>\n                <SearchBox onInputChange={this.handleInputChange} />\n                <Results suggestedNames={this.state.suggestedNames} />\n            </div>\n        );\n\n    }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}